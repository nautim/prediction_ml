## adding necessary libraries
library(data.table)
library(stringr)
library(readr)
library(skimr)
library(Hmisc)
library(caret)
library(randomForest)
library(scales)
library(ranger)
library(pdp)

## setting seed
set.seed(1234)

## uploading data 
paris <- fread("/Users/nautim/Desktop/Data and Econometrics/Predictions with ML/listings.csv")

## filtering data according to the task
paris_cleaned <- paris %>%
  filter(accommodates >= 2 & accommodates <= 6 & # accomodates between 2 and 6 people
          room_type == "Entire home/apt" & 
           !str_detect(paris_cleaned$property_type, c("condo|house|House|cottage|room|Room|Island|Barn|bed|Boat|Cave|suite|villa|bungalow|reside")) &
                         bedrooms %in% c(1, 2, 3)) # have 1 to 3 bedrooms (small & midsize appartement)

ggplot(paris_cleaned, aes(x = bedrooms)) + geom_bar()

## looking at the number of unique values in each of the variable
unique <- c()
for (i in colnames(paris_cleaned)) {
  n <- NROW(unique(paris_cleaned[[i]]))
  unique <- append(unique, n)
}

unique_variables_n <- tibble(colnames(paris_cleaned), unique)
unique_variables_n %>%
  arrange(desc(unique))
 
## deleting pointless variables 
paris_cleaned <- paris_cleaned %>%
  select(-c("id", "listing_url", "picture_url", "description", "name", "host_url", "host_id", "host_url", "host_thumbnail_url", "host_picture_url",
  "neighborhood_overview", "host_about", "license", "scrape_id", "neighbourhood_group_cleansed", "calendar_updated", "last_scraped", "host_location", 
  "host_name", "host_since", "host_neighbourhood", "host_verifications", "neighbourhood"), 
         -contains("calculated_host_listings"),
         -contains("listings_count"))

## improving bathroom variable
unique(paris_cleaned$bathrooms_text)

paris_cleaned <- paris_cleaned %>%
  mutate(bathrooms_text = gsub("Half-bath|half-bath", 0.5, bathrooms_text),
         bathrooms = parse_number(bathrooms_text)) %>%
  select(-bathrooms_text)

unique(paris_cleaned$bathrooms)

## improving price variable, creating ln price
paris_cleaned$price <- gsub("\\$", "", paris_cleaned$price)
paris_cleaned$price <- gsub(",", "", paris_cleaned$price)
paris_cleaned$price <- as.numeric(paris_cleaned$price)
paris_cleaned$lnprice <- log(paris_cleaned$price)

## looking at the distributions of prices
ggplot(paris_cleaned, aes(x = price)) + geom_density()
ggplot(paris_cleaned, aes(x = price)) + geom_bar(width = 2)
ggplot(paris_cleaned, aes(x = lnprice)) + geom_density()
ggplot(paris_cleaned, aes(x = lnprice)) + geom_bar(width = 0.2)

## working with numeric variables
# changing host_acceptance_rate
paris_cleaned$host_acceptance_rate <- as.numeric(gsub("%", "", paris_cleaned$host_acceptance_rate))

# creating days_since_first and days_since_last review
paris_cleaned <- paris_cleaned %>%
  mutate(days_since_first = as.numeric(as.Date(calendar_last_scraped,format="%Y-%m-%d") -
                                as.Date(first_review, format="%Y-%m-%d")),
         days_since_last = as.numeric(as.Date(calendar_last_scraped,format="%Y-%m-%d") -
                                         as.Date(last_review, format="%Y-%m-%d")))
                                         
# choosing other quantitative variables and modifying their representation
quant_variables <- c("host_acceptance_rate", "accommodates", "bathrooms", "beds", "minimum_nights", "availability_60",
                     "number_of_reviews", "review_scores_rating", "reviews_per_month", "review_scores_location",
                     "days_since_first", "days_since_last")
                     
paris_cleaned <- paris_cleaned %>%
  mutate_at(vars(quant_variables), funs("n" = as.numeric))

nnames <- paris_cleaned %>%
  select(ends_with("_n")) %>%
  names()
nnames_i <- match(nnames, colnames(paris_cleaned))
colnames(paris_cleaned)[nnames_i] <- paste0("n_", quant_variables)





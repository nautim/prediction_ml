library(haven)
library(tidyverse)
library(estimatr)
library(lmtest)
library(sandwich)
library(stargazer)
library(caret)
library(grid)
library(patchwork) # To display 2 charts together
library(hrbrthemes)


# uploading data
df <- read_csv("/Users/nautim/Desktop/Data and Econometrics/Predictions with ML/morg2014.csv")


# choosing all Education, Training, and Library Occupations (codes here https://osf.io/57n9q/)
df_sub <- df %>%
  filter(occ2012 >= 2200 & occ2012 <= 2550)

df_sub$occ2012 <- as.factor(df_sub$occ2012)
summary(df_sub$occ2012)

# updating the category names and changing the reference category to teachers in elementary and middle school (the biggest category)
levels(df_sub$occ2012) <- c("postsec teachers", "preschool teachers", "elem & middle teachers", "second teachers", 
                            "special teachers", "other teachers", "archivists/museums", "librarians", "libr technics",
                            "teacher assists", "other educ workers")
df_sub$occ2012 = relevel(df_sub$occ2012, ref = "elem & middle teachers")
table(df_sub$occ2012)


# preparing the main dependent variable for analysis; creating a consistent earnings per hour indicator
df_sub <- df_sub %>% dplyr::mutate(wage = earnwke/uhourse)

## deleting missings which cannot be imputed
df_sub <- df_sub %>% filter(wage != Inf)

df_sub %>%
  ggplot(aes(x = wage)) +
  geom_histogram(binwidth = 2)

## plotting shows that there are some influential observations, and it could be better to use ln
## since I use ln and some people earn between 0 and 1, I also artificially increase all wages by one dollar (for computing purposes)
df_sub <- df_sub %>% dplyr::mutate(lnwage = log(wage + 1))

df_sub %>%
  ggplot(aes(x = lnwage)) +
  geom_histogram(binwidth = 0.3)
## now it looks almost perfectly Gaussian 


# preparing and summarising independent variables

## female
df_sub <- df_sub %>% dplyr::mutate(female = factor(as.numeric(sex == 2)))
summary(df_sub$female)

## union membership
df_sub <- df_sub %>% dplyr::mutate(union_mem = as.factor(ifelse(unionmme == "Yes", 1, ifelse(unionmme == "No", 0, NA))))
summary(df_sub$union_mem)

## age
summary(df_sub$age)
plot(density(df_sub$age))

## number of own children
summary(df_sub$ownchild)
plot(density(df_sub$ownchild))


# summary statistics of the main variables
df_sub %>% dplyr::select(wage, lnwage, female, union_mem, age, ownchild, occ2012) %>% Hmisc::describe()


# preliminary visualisations

## age vs. lnwage - slightly squared trend (model should include agesq)
ggplot(data = df_sub, aes(x = age, y = lnwage)) +
  geom_point(size = 1,  shape = 16, alpha = 0.8, show.legend=F, na.rm = TRUE) + 
  geom_smooth(method="loess", se=F, size=1, span=0.9) +
  labs(x = "age (years)",y = "ln(earnings per hour)") +
  theme_bw()

df_sub <- df_sub %>% dplyr::mutate(agesq = age^2)

## median wage by sex and occupations
df_sub %>%
  group_by(female) %>%
  summarise(mwage = median(wage, na.rm = T),
            SE = sd(wage)/sqrt(n())) %>%
  ggplot(aes(x = female, y = mwage, fill = female)) + geom_bar(stat = "identity", width = 0.5) +
  theme_bw() + geom_text(aes(label = round(mwage, 2)), position = position_stack(vjust = 0.5)) +
  labs(y = "median wage, $/hour", title = "Median wage by gender") + theme(legend.position = "none") +
  geom_errorbar(aes(ymin = mwage - SE, ymax = mwage + SE),
                size=.3,    # Thinner lines
                width=.2,
                position=position_dodge(.9), col = "grey")

df_sub %>%
  group_by(female, occ2012) %>%
  summarise(mwage = median(wage, na.rm = T),
            SE = sd(wage)/sqrt(n()))%>%
  ggplot(aes(x = occ2012, y = mwage, fill = female)) +
  labs(y = "median wage, $/hour", x = "", title = "Median wage by gender among different occupations") + theme_bw() +
  geom_bar(stat = "identity", width = 0.5, position = position_dodge()) +
  theme(axis.text.x = element_text(angle=90,hjust=1)) +
  geom_text(aes(label = round(mwage, 1)), position = position_dodge(0.8), vjust = -0.5) +
  ylim(0, 35) +
  geom_errorbar(aes(ymin = mwage - SE, ymax = mwage + SE),
                size=.3,    # Thinner lines
                width=.2,
                position=position_dodge(.5), col = "grey")



## median wage by union membership and occupations
df_sub %>%
  group_by(union_mem) %>%
  summarise(mwage = median(wage, na.rm = T),
            SE = sd(wage)/sqrt(n())) %>%
  ggplot(aes(x = union_mem, y = mwage, fill = union_mem)) + geom_bar(stat = "identity", width = 0.5) +
  theme_bw() + geom_text(aes(label = round(mwage, 2)), position = position_stack(vjust = 0.5)) +
  labs(y = "median wage, $/hour", x = "union membership", title = "Median wage by union membership") + theme(legend.position = "none") +
  geom_errorbar(aes(ymin = mwage - SE, ymax = mwage + SE),
                size=.3,    # Thinner lines
                width=.2,
                position=position_dodge(.9), col = "grey")
                
df_sub %>%
  group_by(union_mem, occ2012) %>%
  summarise(mwage = median(wage, na.rm = T),
            SE = sd(wage)/sqrt(n())) %>%
  ggplot(aes(x = occ2012, y = mwage, fill = union_mem)) +
  labs(y = "median wage, $/hour", x = "", title = "Median wage by union membership among different occupations") + theme_bw() +
  geom_bar(stat = "identity", width = 0.5, position = position_dodge()) +
  theme(axis.text.x = element_text(angle=90,hjust=1)) +
  geom_text(aes(label = round(mwage, 1)), position = position_dodge(0.8), vjust = -0.5) +
  ylim(0, 35) + scale_fill_discrete(name = "union \n membership") +
  geom_errorbar(aes(ymin = mwage - SE, ymax = mwage + SE),
                size=.3,    # Thinner lines
                width=.2,
                position=position_dodge(.5), col = "grey")


## number of children vs. lnwage - slightly squared trend (model should include ownchildsq)
df_sub %>%
  ggplot(aes(x = ownchild, y = lnwage)) +
  geom_jitter(size = 1,  shape = 16, alpha = 0.8, show.legend = F, na.rm = TRUE) + 
  geom_smooth(method = "loess", se = F, size = 1, span = 0.9) +
  labs(x = "number of children", y = "ln(earnings per hour)") +
  theme_bw()

df_sub <- df_sub %>% dplyr::mutate(ownchildsq = ownchild^2)


# building models

reg1.1 <- lm(lnwage ~ age + agesq, data = df_sub) 
summary(reg1.1)
reg1.2 <- lm_robust(lnwage ~ age + agesq, data = df_sub, se_type = "HC1")
summary(reg1.2)

reg2.1 <- lm(lnwage ~ age + agesq + female + union_mem + ownchild + ownchildsq, data = df_sub) 
summary(reg2.1)
reg2.2 <- lm_robust(lnwage ~ age + agesq + female + union_mem + ownchild + ownchildsq, data = df_sub, se_type = "HC1")
summary(reg2.2)

reg3.1 <- lm(lnwage ~ age + agesq + female + union_mem + ownchild + ownchildsq + occ2012 + female*union_mem, data = df_sub) 
summary(reg3.1)
reg3.2 <- lm_robust(lnwage ~ age + agesq + female + union_mem + ownchild + ownchildsq + occ2012 + female*union_mem, data = df_sub, se_type = "HC1")
summary(reg3.2)

reg4.1 <- lm(lnwage ~ age + agesq + female + union_mem + ownchild + ownchildsq + occ2012 + female*union_mem + 
               occ2012*female + occ2012*union_mem + age*female + age*union_mem, data = df_sub) 
summary(reg4.1)
reg4.2 <- lm_robust(lnwage ~ age + agesq + female + union_mem + ownchild + ownchildsq + occ2012 + female*union_mem + 
               occ2012*female + occ2012*union_mem + age*female + age*union_mem, data = df_sub, se_type = "HC1")
summary(reg4.2)


# deriving BIC, RMSE in the full sample, and RSquare

models <- c("reg1.1", "reg2.1","reg3.1", "reg4.1")
BIC <- c()
RMSE <- c()
RSquared <- c()
regr <- c()
k <- c()

for ( i in 1:length(models)){
  BIC[i] <- BIC(get(models[i]))
  RMSE[i] <- RMSE(predict(get(models[i])), get(models[i])$model$lnwage)
  RSquared[i] <-summary(get(models[i]))$r.squared
  regr[[i]] <- coeftest(get(models[i]), vcov = sandwich)
  k[i] <- get(models[i])$rank - 1
}

eval <- data.frame(models, k, RSquared, RMSE, BIC)
eval <- eval %>%
  mutate(models = paste0("(",gsub("reg","",models),")")) %>%
  rename(Model = models, "R-squared" = RSquared, "Training RMSE" = RMSE, "N predictors" = k)


# cross-validation

k <- 4

cv1 <- train(lnwage ~ age + agesq, df_sub, method = "lm", trControl = trainControl(method = "cv", number = k))
cv2 <- train(lnwage ~ age + agesq + female + union_mem + ownchild + ownchildsq, df_sub, method = "lm", trControl = trainControl(method = "cv", number = k))
cv3 <- train(lnwage ~ age + agesq + female + union_mem + ownchild + ownchildsq + occ2012 + female*union_mem, df_sub, method = "lm", trControl = trainControl(method = "cv", number = k), na.action = "na.omit")
cv4 <- train(lnwage ~ age + agesq + female + union_mem + ownchild + ownchildsq + occ2012 + female*union_mem + 
               occ2012*female + occ2012*union_mem + age*female + age*union_mem, df_sub, method = "lm", trControl = trainControl(method = "cv", number = k), na.action = "na.omit")

cv <- c("cv1", "cv2", "cv3", "cv4")
rmse_cv <- c()

for(i in 1:length(cv)){
  rmse_cv[i] <- sqrt((get(cv[i])$resample[[1]][1]^2 +
                        get(cv[i])$resample[[1]][2]^2 +
                        get(cv[i])$resample[[1]][3]^2 +
                        get(cv[i])$resample[[1]][4]^2)/4)
}

cv_mat <- data.frame(rbind(cv1$resample[4], "Average"),
                     rbind(cv1$resample[1], rmse_cv[1]),
                     rbind(cv2$resample[1], rmse_cv[2]),
                     rbind(cv3$resample[1], rmse_cv[3]),
                     rbind(cv4$resample[1], rmse_cv[4])
)

colnames(cv_mat)<-c("Resample","Model1", "Model2", "Model3", "Model4")
cv_mat

stargazer(cv_mat, summary = F, digits=0, float=F, type="text")


eval <- cbind(eval,  t(cv_mat[5,2:5]))
colnames(eval)[6] <- "Сross-validated RMSE"
eval

p <- eval %>%
  ggplot(aes(x = `N predictors`)) + 
  geom_line(aes(y = `Training RMSE`, colour = "Training RMSE")) +
  geom_line(aes(y = `Сross-validated RMSE`, colour = "Сross-validated RMSE")) +
  geom_line(aes(y = `BIC`/31000, colour = "BIC")) +
  scale_y_continuous(
    "RMSE", 
    sec.axis = sec_axis(~.* 31000, name = "BIC")
  ) + labs(title = "Models Diagnostics") + theme_bw()
p$labels$colour <- "Diagnostics Criteria"
p




